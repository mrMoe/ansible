{% if redirect_domain is defined and redirect_domain|length %}

server {
    listen 80;
    server_name {{domain}} *.{{domain}};
    return 301 $scheme://{{redirect_domain}}$request_uri;
}

{% else %}

#server {
#    listen 80;
#    server_name {{domain}} *.{{domain}};
#    return 301 https://www.{{domain}}$request_uri;
#}

server {
    listen 80;
    listen [::]:80;
    
    # SSL configuration
    #
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782
    #
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    # include snippets/snakeoil.conf;
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    #    # indicate locations of SSL key files.
    #    ssl_certificate /srv/www/ssl/ssl.crt;
    #    ssl_certificate_key /srv/www/ssl/ssl.key;
    #    ssl_dhparam /srv/www/master/ssl/dhparam.pem;

    #    # Enable HSTS. This forces SSL on clients that respect it, most modern browsers. The includeSubDomains flag is optional.
    #    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    #    # Set caches, protocols, and accepted ciphers. This config will merit an A+ SSL Labs score as of Sept 2015.
    #    ssl_session_cache shared:SSL:20m;
    #    ssl_session_timeout 10m;
    #    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #    ssl_prefer_server_ciphers on;
    #    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:CAMELLIA256-SHA:CAMELLIA128-SHA256;
        # https://cipherli.st/
    # ssl_protocols TLSv1.3;# Requires nginx >= 1.13.0 else use TLSv1.2
    # ssl_prefer_server_ciphers on; 
    # ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
    # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    # ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    # ssl_session_timeout  10m;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_tickets off; # Requires nginx >= 1.5.9
    # ssl_stapling on; # Requires nginx >= 1.3.7
    # ssl_stapling_verify on; # Requires nginx => 1.3.7
    # resolver $DNS-IP-1 $DNS-IP-2 valid=300s;
    # resolver_timeout 5s; 
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    # add_header X-Frame-Options DENY;
    # add_header X-Content-Type-Options nosniff;
    # add_header X-XSS-Protection "1; mode=block";

    server_name {{domain}} *.{{domain}};

    root /var/www/{{domain}}/html;
    index index.html index.php;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
        try_files $uri $uri/ /index.php?$args @robots;
    }
    location @robots {
        return 200 "User-agent: *\nDisallow: /wp-admin/\nAllow: /wp-admin/admin-ajax.php\n";
    }

    location / {
        try_files $uri $uri/ /index.php?$args =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_intercept_errors on;
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        access_log off;
        log_not_found off;
    }

    location ~ /\.(?!well-known\/) {
        deny all;
    }

    location /wp-content/uploads {
        location ~ \.php$ {
            deny all;
        }
    }

    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }
    # https://codex.wordpress.org/Nginx
}

{% endif %}
